// Generated by view binder compiler. Do not edit!
package com.example.android.biometricauth.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Space;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.android.biometricauth.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FingerprintDialogContainerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout backupContainer;

  @NonNull
  public final LinearLayout buttonPanel;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final FrameLayout description;

  @NonNull
  public final TextView newFingerprintEnrolledDescription;

  @NonNull
  public final EditText password;

  @NonNull
  public final TextView passwordDescription;

  @NonNull
  public final Button secondDialogButton;

  @NonNull
  public final Space spacer;

  @NonNull
  public final CheckBox useFingerprintInFutureCheck;

  private FingerprintDialogContainerBinding(@NonNull LinearLayout rootView,
      @NonNull RelativeLayout backupContainer, @NonNull LinearLayout buttonPanel,
      @NonNull Button cancelButton, @NonNull FrameLayout description,
      @NonNull TextView newFingerprintEnrolledDescription, @NonNull EditText password,
      @NonNull TextView passwordDescription, @NonNull Button secondDialogButton,
      @NonNull Space spacer, @NonNull CheckBox useFingerprintInFutureCheck) {
    this.rootView = rootView;
    this.backupContainer = backupContainer;
    this.buttonPanel = buttonPanel;
    this.cancelButton = cancelButton;
    this.description = description;
    this.newFingerprintEnrolledDescription = newFingerprintEnrolledDescription;
    this.password = password;
    this.passwordDescription = passwordDescription;
    this.secondDialogButton = secondDialogButton;
    this.spacer = spacer;
    this.useFingerprintInFutureCheck = useFingerprintInFutureCheck;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FingerprintDialogContainerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FingerprintDialogContainerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fingerprint_dialog_container, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FingerprintDialogContainerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backup_container;
      RelativeLayout backupContainer = rootView.findViewById(id);
      if (backupContainer == null) {
        break missingId;
      }

      id = R.id.buttonPanel;
      LinearLayout buttonPanel = rootView.findViewById(id);
      if (buttonPanel == null) {
        break missingId;
      }

      id = R.id.cancel_button;
      Button cancelButton = rootView.findViewById(id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.description;
      FrameLayout description = rootView.findViewById(id);
      if (description == null) {
        break missingId;
      }

      id = R.id.new_fingerprint_enrolled_description;
      TextView newFingerprintEnrolledDescription = rootView.findViewById(id);
      if (newFingerprintEnrolledDescription == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = rootView.findViewById(id);
      if (password == null) {
        break missingId;
      }

      id = R.id.password_description;
      TextView passwordDescription = rootView.findViewById(id);
      if (passwordDescription == null) {
        break missingId;
      }

      id = R.id.second_dialog_button;
      Button secondDialogButton = rootView.findViewById(id);
      if (secondDialogButton == null) {
        break missingId;
      }

      id = R.id.spacer;
      Space spacer = rootView.findViewById(id);
      if (spacer == null) {
        break missingId;
      }

      id = R.id.use_fingerprint_in_future_check;
      CheckBox useFingerprintInFutureCheck = rootView.findViewById(id);
      if (useFingerprintInFutureCheck == null) {
        break missingId;
      }

      return new FingerprintDialogContainerBinding((LinearLayout) rootView, backupContainer,
          buttonPanel, cancelButton, description, newFingerprintEnrolledDescription, password,
          passwordDescription, secondDialogButton, spacer, useFingerprintInFutureCheck);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
